/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forms;

import java.util.ArrayList;
import java.util.List;
import model.Categoria;
import model.Tipo;
import views.BaseSingleView;

/**
 *
 * @author kevin
 */
public class formTipoElemento extends BaseSingleView<Tipo> {

    private List<Categoria> CategoriaList = null;
    
    /**
     * Creates new form formTipoElemento
     */
    public formTipoElemento() {
        initComponents();
        this.saveBtn = this.btnGuardar;
        this.cancelBtn = this.btnCancelar;
        this.setModel(this.model);
        this.CategoriaList = new ArrayList<>();
    }
    
    public void loadCategoria(List<Categoria> list) {
        this.CategoriaList = list;
        this.cbxCategoria.removeAllItems();
        list.forEach((data) -> this.cbxCategoria.addItem(data.getNombre()));
    }
    
    /*public formTipoElemento(Tipo obj) {
        initComponents();
        int categoriaPosition = this.cargarListaCategoria(obj.getCategoria().getId());
        
        this.id = obj.getId();
        this.tbxNombre.setText(obj.getNombre());
        this.chbxEstado.setSelected(obj.getEstado());
        this.cbxCategoria.setSelectedIndex(categoriaPosition);
        this.chbxClase.setSelected(obj.getClase());
    }
    
    private int cargarListaCategoria(int id){
        this.CategoriaList = main.getDaoFactory().getDaoCategoria().Select(null, Option.Light);
        this.cbxCategoria.removeAllItems();
        int index = 0;
        int position = -1;
        for(Categoria categoria: this.CategoriaList) {
            this.cbxCategoria.addItem(categoria.getNombre());
            if(id > 0 && id == categoria.getId())
                position = index;
            index++;
        }
        return position;
    }*/

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        chbxEstado = new javax.swing.JCheckBox();
        tbxNombre = new javax.swing.JTextField();
        btnGuardar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cbxCategoria = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        chbxClase = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel3.setText("Estado");

        chbxEstado.setText("Activo");

        tbxNombre.setText("jTextField1");

        btnGuardar.setText("Guardar");

        btnCancelar.setText("Cancelar");

        jLabel1.setText("Registrar Tipo de Elemento");

        jLabel2.setText("Nombre");

        cbxCategoria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel4.setText("Categoría");

        jLabel5.setText("Clase");

        chbxClase.setText("¿Consumible?");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel3)
                                    .addComponent(btnGuardar))
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnCancelar)
                                    .addComponent(chbxEstado)
                                    .addComponent(cbxCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(chbxClase))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(38, 38, 38)
                        .addComponent(tbxNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(172, 172, 172))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tbxNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(chbxEstado))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cbxCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(chbxClase))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardar)
                    .addComponent(btnCancelar))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /*private void btnGuardarMouseClicked(java.awt.event.MouseEvent evt) {  
        Tipo data = new Tipo(
                this.id, 
                tbxNombre.getText(), 
                chbxEstado.isSelected(), 
                this.CategoriaList.get(this.cbxCategoria.getSelectedIndex()),
                chbxClase.isSelected());
        if(this.id == 0){
            if(main.getDaoFactory().getDaoTipo().Execute(data, Action.Create) != null){
                PrintMessage.showInformationMessage("Registro", "Registro guardado");
                new formTiposElementos().setVisible(true);
                this.dispose();
            } else {
                PrintMessage.showErrorMessage("Registro", "Registro no guardado");
            }
        } else {
            if(main.getDaoFactory().getDaoTipo().Execute(data, Action.Update) != null){
                PrintMessage.showInformationMessage("Registro", "Registro modificado");
                new formTiposElementos().setVisible(true);
                this.dispose();
            } else {
                PrintMessage.showErrorMessage("Registro", "Registro no modificado");
            }
        }
    }*/
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(formTipoElemento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(formTipoElemento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(formTipoElemento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(formTipoElemento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new formTipoElemento().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JComboBox<String> cbxCategoria;
    private javax.swing.JCheckBox chbxClase;
    private javax.swing.JCheckBox chbxEstado;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField tbxNombre;
    // End of variables declaration//GEN-END:variables

    @Override
    public Tipo getModel() {
        if(this.model == null)
            this.model = new Tipo(0);
        this.model.setNombre(this.tbxNombre.getText());
        this.model.setEstado(this.chbxEstado.isSelected());
        this.model.setCategoria(this.CategoriaList.get(this.cbxCategoria.getSelectedIndex()));
        this.model.setClase(this.chbxClase.isSelected());
        return this.model;
    }

    @Override
    public void setModel(Tipo model) {
        this.model = model;
        this.tbxNombre.setText(this.model != null ? this.model.getNombre() : "");
        this.chbxEstado.setSelected(this.model != null ? this.model.getEstado(): false);
        this.cbxCategoria.setSelectedItem(this.CategoriaList != null && this.model != null ? this.model.getCategoria().getNombre() : "");
        this.chbxClase.setSelected(this.model != null ? this.model.getClase(): false);
    }

    @Override
    public boolean checkView() {
        if(this.tbxNombre.getText().equals(""))
            this.addError("nombre", "El nombre es obligatorio.");
        if(this.cbxCategoria.getSelectedItem().toString().equals(""))
            this.addError("categoria", "La categoría es obligatoria.");
        return this.hasErrors();
    }

    @Override
    public boolean isNew() {
        return this.model == null || this.model.getId() == 0;
    }    
}
